// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "termsOfService": "http://swagger.io/terms/",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/": {
            "post": {
                "description": "Create short URL for full URL",
                "consumes": [
                    "text/plain"
                ],
                "produces": [
                    "text/plain"
                ],
                "tags": [
                    "Info"
                ],
                "summary": "Create short URL for full URL",
                "parameters": [
                    {
                        "type": "string",
                        "default": "auth=xxx",
                        "description": "auth",
                        "name": "Cookie",
                        "in": "header"
                    },
                    {
                        "description": "Create short URL request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/api/shorten": {
            "post": {
                "description": "Create short URL for full URL",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Info"
                ],
                "summary": "Create short URL for full URL",
                "parameters": [
                    {
                        "type": "string",
                        "default": "auth=xxx",
                        "description": "auth",
                        "name": "Cookie",
                        "in": "header"
                    },
                    {
                        "description": "Create short URL request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.CreateShortURLDataRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/dto.CreateShortURLDataResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/dto.CreateShortURLDataResponse"
                        }
                    }
                }
            }
        },
        "/api/shorten/batch": {
            "post": {
                "description": "Batch create short URLs for full URLs",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Info"
                ],
                "summary": "Batch create short URLs for full URLs",
                "parameters": [
                    {
                        "type": "string",
                        "default": "auth=xxx",
                        "description": "auth",
                        "name": "Cookie",
                        "in": "header"
                    },
                    {
                        "description": "Batch create short URLs request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.BatchCreateDataRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/dto.BatchCreateDataResponse"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    }
                }
            }
        },
        "/api/user/urls": {
            "get": {
                "description": "Get user short URLs for full URLs",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Info"
                ],
                "summary": "Get user short URLs for full URLs",
                "parameters": [
                    {
                        "type": "string",
                        "default": "auth=xxx",
                        "description": "auth",
                        "name": "Cookie",
                        "in": "header"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/dto.ShortURLData"
                            }
                        }
                    },
                    "204": {
                        "description": "No Content"
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                }
            },
            "delete": {
                "description": "Delete user short URLs",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Info"
                ],
                "summary": "Delete user short URLs",
                "parameters": [
                    {
                        "type": "string",
                        "default": "auth=xxx",
                        "description": "auth",
                        "name": "Cookie",
                        "in": "header"
                    },
                    {
                        "description": "Delete user short URLs request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                ],
                "responses": {
                    "202": {
                        "description": "Accepted"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                }
            }
        },
        "/ping": {
            "get": {
                "description": "Check server readiness",
                "tags": [
                    "Debug"
                ],
                "summary": "Check server readiness",
                "parameters": [
                    {
                        "type": "string",
                        "default": "auth=xxx",
                        "description": "auth",
                        "name": "Cookie",
                        "in": "header"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/{id}": {
            "get": {
                "description": "Get full URL for short URL",
                "tags": [
                    "Info"
                ],
                "summary": "Get full URL for short URL",
                "parameters": [
                    {
                        "type": "string",
                        "default": "auth=xxx",
                        "description": "auth",
                        "name": "Cookie",
                        "in": "header"
                    },
                    {
                        "type": "string",
                        "description": "short URL ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "307": {
                        "description": "Temporary Redirect",
                        "headers": {
                            "Location": {
                                "type": "string",
                                "description": "Full URL"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "410": {
                        "description": "Gone"
                    }
                }
            }
        }
    },
    "definitions": {
        "dto.BatchCreateDataRequest": {
            "type": "object",
            "properties": {
                "correlation_id": {
                    "type": "string"
                },
                "original_url": {
                    "type": "string"
                }
            }
        },
        "dto.BatchCreateDataResponse": {
            "type": "object",
            "properties": {
                "correlation_id": {
                    "type": "string"
                },
                "short_url": {
                    "type": "string"
                }
            }
        },
        "dto.CreateShortURLDataRequest": {
            "type": "object",
            "properties": {
                "url": {
                    "type": "string"
                }
            }
        },
        "dto.CreateShortURLDataResponse": {
            "type": "object",
            "properties": {
                "result": {
                    "type": "string"
                }
            }
        },
        "dto.ShortURLData": {
            "type": "object",
            "properties": {
                "original_url": {
                    "type": "string"
                },
                "short_url": {
                    "type": "string"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "0.1",
	Host:             "",
	BasePath:         "",
	Schemes:          []string{},
	Title:            "URL Shortener API",
	Description:      "URL Shortener API OpenAPI",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
